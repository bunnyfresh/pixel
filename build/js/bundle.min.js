$(window).load(function(){}),function(){var t;t=function(){function t(){this.$loader=$(".loader"),this.$inc=$(".loader-increment"),this.$percent=$(".loader-percent"),this.$loader_text=$(".loader-text"),this.loaded=0,this.increments=$.makeArray(this.$inc),this.loader_length=this.increments.length,this.ratio=Math.round(100/this.loader_length),this.current_inc=null,this._load()}return t.prototype._load=function(){return setInterval(function(t){return function(){return t.loaded<99.9?(t.loaded+=.1,t._update_display()):(t.$loader_text.text("Destroyed"),t.$percent.text("100.0%"))}}(this),10)},t.prototype._update_display=function(){var t,e,n;if(e=Math.round(10*this.loaded)/10,n="",n=this.loaded<10?"  ":this.loaded<100?" ":"",this.$percent.text(""+n+e+"%"),(t=Math.round(this.loaded/this.ratio))!==this.current_inc)return this.current_inc=t,$(this.increments[this.current_inc]).text("#")},t}(),$(function(){return null==window.App&&(window.App={}),window.App.Loader=new t}),$.fn.typewriter=function(){return this.each(function(){var t,e,n,i,r;n=$(this),e=n.html(),t=0,i=0,n.html(""),(r=function(){var s,a;if("<"===e.substring(t,t+1))if(s=new RegExp(/<span class="instant"/),a=new RegExp(/<span class="clear"/),e.substring(t,e.length).match(s))t+=e.substring(t,e.length).indexOf("</span>")+7;else if(e.substring(t,e.length).match(a))i=t,t+=e.substring(t,e.length).indexOf("</span>")+7;else for(;">"!==e.substring(t,t+1);)t++;n.html(e.substring(i,t++)+(1&t?"_":"")),t>=e.length||setTimeout(r,30+50*Math.random()),t>=e.length&&(document.getElementById("loading").classList.add("close"),setTimeout(function(){document.getElementById("loading").remove()},1500),$(".gr").animate({height:"100vh"},3e3),setInterval(function(){$(".gr span").fadeOut()},3e3))})()}),this},$(".terminal").typewriter()}.call(this),jQuery("img.svg").each(function(){var t=jQuery(this),e=t.attr("id"),n=t.attr("class"),i=t.attr("src");jQuery.get(i,function(i){var r=jQuery(i).find("svg");void 0!==e&&(r=r.attr("id",e)),void 0!==n&&(r=r.attr("class",n+" replaced-svg")),r=r.removeAttr("xmlns:a"),t.replaceWith(r)},"xml")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
