/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */@import url(https://fonts.googleapis.com/css?family=Source+Code+Pro);html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}html{-webkit-box-sizing:border-box;box-sizing:border-box;color:#222;font-size:1em}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0;padding:0}audio,canvas,iframe,img,svg,video{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.browserupgrade{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}body .gr{position:fixed;left:14.28%;z-index:0;right:0;top:0;width:1px;height:0;background:#ebebeb;overflow:visible!important}body .gr span{width:5px;height:5px;border-radius:50%;bottom:0;position:absolute;left:-2.5px;background:tomato;display:block}body .gr:nth-child(3){left:14.28%}body .gr:nth-child(4){left:28.56%}body .gr:nth-child(5){left:42.84%}body .gr:nth-child(6){left:57.12%}body .gr:nth-child(7){left:71.4%}body .gr:nth-child(8){left:85.68%}#loading{-webkit-transition:all 1s ease-out;-o-transition:all 1s ease-out;transition:all 1s ease-out}.close{opacity:0;visibility:hidden}.load{position:fixed;width:100%;height:100%;background:url(../img/design-tools.jpg);background-size:contain;top:0;left:0;z-index:9999}.load .black{background:rgba(0,0,0,.75);position:absolute;left:0;top:0;width:100%;height:100%}.load svg{fill:#fff;position:absolute;width:150px;height:150px;z-index:10000;left:calc(50% - 75px);bottom:calc(50% - 75px);object-fit:contain;-o-object-fit:contain;-webkit-transition:all 3s ease;-o-transition:all 3s ease;transition:all 3s ease}.load #the_x{will-change:auto;animation:letter_x 5s linear infinite;-o-animation:letter_x 5s linear infinite;-webkit-animation:letter_x 5s linear infinite}@keyframes letter_x{0%{fill:red}20%{fill:orange}40%{fill:#87ceeb}60%{fill:tomato}80%{fill:#228b22}100%{fill:red}}@-webkit-keyframes letter_x{0%{fill:red}20%{fill:orange}40%{fill:#87ceeb}60%{fill:tomato}80%{fill:#228b22}100%{fill:red}}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}.loading{background-color:#111;color:#fff;font-family:"Source Code Pro",mono;font-weight:400;padding:20px 40px;-webkit-font-smoothing:antialiased;height:100%;width:100%;position:fixed;top:0;left:0}.loader{margin-bottom:1em}.loader-increment{color:red;margin-right:5px}.dollar:before{content:'$';color:#666}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
